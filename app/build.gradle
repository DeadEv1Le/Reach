plugins {
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
}
apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'



android {
    compileSdkVersion 33
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "org.tensorflow.lite.examples.detection"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    flavorDimensions "tfliteInference"
    productFlavors {
       // The TFLite inference is built using the TFLite Java API.
       interpreter {
           dimension "tfliteInference"
       }
       // The TFLite inference is built using the TFLite Task library.
       taskApi {
           dimension "tfliteInference"
       }
    }
    buildFeatures {
        viewBinding true
    }


}


// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
// apply from:'download_model.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'



    implementation 'com.github.clans:fab:1.6.4'
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.firebase:firebase-auth-ktx:21.2.0'
    implementation 'com.google.firebase:firebase-database:20.1.0'
    implementation 'com.google.firebase:firebase-database-ktx:20.1.0'

    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'com.google.firebase:firebase-storage:20.1.0'
    interpreterImplementation project(":lib_interpreter")
    taskApiImplementation project(":lib_task_api")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'com.google.android.material:material:1.8.0'


    implementation 'com.github.siyamed:android-shape-imageview:0.9.+@aar'
    implementation "androidx.constraintlayout:constraintlayout:2.2.0-alpha09"
    // To use constraintlayout in compose

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    //Database and Room library
    annotationProcessor 'androidx.room:room-compiler:2.5.0'

    implementation 'androidx.room:room-runtime:2.5.0'
    implementation 'androidx.sqlite:sqlite:2.1.0'




    implementation 'com.google.android.gms:play-services-maps:17.0.0'


    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'


}
